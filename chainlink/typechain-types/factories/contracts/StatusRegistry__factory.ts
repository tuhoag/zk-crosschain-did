/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StatusRegistry,
  StatusRegistryInterface,
} from "../../contracts/StatusRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_donId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyArgs",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySource",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySource",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "StatusRegistry.IssuerId",
        name: "issuerId",
        type: "uint8",
      },
    ],
    name: "InvalidIssuerId",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "string",
            name: "status",
            type: "string",
          },
        ],
        internalType: "struct StatusState",
        name: "statusState",
        type: "tuple",
      },
    ],
    name: "InvalidStatus",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "StatusRegistry.IssuerId",
        name: "issuerId",
        type: "uint8",
      },
    ],
    name: "IssuerNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "NoInlineSecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRouterCanFulfill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "RequestNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "error",
        type: "bytes",
      },
    ],
    name: "ResponseReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "StatusRegistry.IssuerId",
        name: "issuerId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "string",
            name: "status",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct StatusState",
        name: "status",
        type: "tuple",
      },
    ],
    name: "StatusUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "INVALID_ISSUER_ID",
    outputs: [
      {
        internalType: "StatusRegistry.IssuerId",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StatusRegistry.IssuerId",
        name: "issuerId",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "addIssuer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "string",
            name: "status",
            type: "string",
          },
        ],
        internalType: "struct StatusState",
        name: "lastStatusState",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "string",
            name: "status",
            type: "string",
          },
        ],
        internalType: "struct StatusState",
        name: "newStatusState",
        type: "tuple",
      },
    ],
    name: "checkValidity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "donId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StatusRegistry.IssuerId",
        name: "issuerId",
        type: "uint8",
      },
    ],
    name: "getIssuerUrl",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSource",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "handleOracleFulfillment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "issuerRequestIds",
    outputs: [
      {
        internalType: "StatusRegistry.IssuerId",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StatusRegistry.IssuerId",
        name: "",
        type: "uint8",
      },
    ],
    name: "issuerStatuses",
    outputs: [
      {
        internalType: "uint64",
        name: "time",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "status",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StatusRegistry.IssuerId",
        name: "",
        type: "uint8",
      },
    ],
    name: "issuerUrls",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastResponse",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StatusRegistry.IssuerId",
        name: "issuerId",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "callbackGasLimit",
        type: "uint32",
      },
    ],
    name: "requestStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_source",
        type: "string",
      },
      {
        internalType: "enum FunctionsRequest.Location",
        name: "secretsLocation",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "encryptedSecretsReference",
        type: "bytes",
      },
      {
        internalType: "string[]",
        name: "args",
        type: "string[]",
      },
      {
        internalType: "bytes[]",
        name: "bytesArgs",
        type: "bytes[]",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "callbackGasLimit",
        type: "uint32",
      },
    ],
    name: "sendRequest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newDonId",
        type: "bytes32",
      },
    ],
    name: "setDonId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_source",
        type: "string",
      },
    ],
    name: "setSource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "source",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620028e9380380620028e9833981016040819052620000349162000183565b6001600160a01b0382166080523380600081620000985760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615620000cb57620000cb81620000d8565b50505060025550620001bf565b336001600160a01b03821603620001325760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016200008f565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b600080604083850312156200019757600080fd5b82516001600160a01b0381168114620001af57600080fd5b6020939093015192949293505050565b608051612707620001e26000396000818161032d015261129a01526127076000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806378ca5de7116100d8578063afa293d41161008c578063e30155dd11610066578063e30155dd146102e0578063f2fde38b14610306578063fc2a88c31461031957600080fd5b8063afa293d4146102a2578063badb0400146102aa578063c4d22330146102cd57600080fd5b80638da5cb5b116100bd5780638da5cb5b1461026b5780638dbe7b9d1461028657806399d254551461028f57600080fd5b806378ca5de71461025057806379ba50971461026357600080fd5b806329f0de3f1161012f57806362747e421161011457806362747e421461022d57806367e828bf1461023557806374f978981461023d57600080fd5b806329f0de3f1461020557806351e702fa1461021a57600080fd5b806317bb91431161016057806317bb9143146101b0578063231c1619146101c357806324a5a1c2146101e457600080fd5b8063072fbc431461017c5780630ca761751461019b575b600080fd5b610184600081565b60405160ff90911681526020015b60405180910390f35b6101ae6101a9366004611b0c565b610322565b005b6101ae6101be366004611bd8565b6103bf565b6101d66101d1366004611d0e565b61042e565b604051908152602001610192565b6101f76101f2366004611dfa565b61056c565b604051610192929190611e65565b61020d61061c565b6040516101929190611e90565b61020d610228366004611dfa565b6106aa565b61020d610792565b61020d61079f565b6101ae61024b366004611ea3565b6107ac565b6101ae61025e366004611ee8565b610ac4565b6101ae610ad1565b6000546040516001600160a01b039091168152602001610192565b6101d660025481565b6101ae61029d366004611f01565b610b8f565b61020d610bc3565b6101846102b8366004611ee8565b60086020526000908152604090205460ff1681565b61020d6102db366004611dfa565b610c55565b6102f66102ee366004611fbd565b600192915050565b6040519015158152602001610192565b6101ae610314366004612021565b610c6e565b6101d660035481565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610384576040517fc6829f8300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61038f838383610c82565b60405183907f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e690600090a2505050565b6103c7610de8565b60ff831661040b576040517f9712120500000000000000000000000000000000000000000000000000000000815260ff841660048201526024015b60405180910390fd5b60ff831660009081526007602052604090206104288284836120d2565b50505050565b60006104716040805160e0810190915280600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b6104b86000808d8d8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525087959493925050610e449050565b602081018960028111156104ce576104ce612193565b908160028111156104e1576104e1612193565b8152505087878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506080820152855115610531576105318187610ec2565b845115610542576105428186610eec565b61055861054e82610f16565b8585600254611295565b60038190559b9a5050505050505050505050565b6009602052600090815260409020805460018201805467ffffffffffffffff90921692916105999061204a565b80601f01602080910402602001604051908101604052809291908181526020018280546105c59061204a565b80156106125780601f106105e757610100808354040283529160200191610612565b820191906000526020600020905b8154815290600101906020018083116105f557829003601f168201915b5050505050905082565b600580546106299061204a565b80601f01602080910402602001604051908101604052809291908181526020018280546106559061204a565b80156106a25780601f10610677576101008083540402835291602001916106a2565b820191906000526020600020905b81548152906001019060200180831161068557829003601f168201915b505050505081565b60ff81166000908152600760205260408120805460609291906106cc9061204a565b80601f01602080910402602001604051908101604052809291908181526020018280546106f89061204a565b80156107455780601f1061071a57610100808354040283529160200191610745565b820191906000526020600020905b81548152906001019060200180831161072857829003601f168201915b50505050509050805160000361078c576040517f1f79813e00000000000000000000000000000000000000000000000000000000815260ff84166004820152602401610402565b92915050565b600480546106299061204a565b600680546106299061204a565b600680546107b99061204a565b90506000036107db576040516322ce3edd60e01b815260040160405180910390fd5b60ff8316600090815260076020526040812080546107f89061204a565b80601f01602080910402602001604051908101604052809291908181526020018280546108249061204a565b80156108715780601f1061084657610100808354040283529160200191610871565b820191906000526020600020905b81548152906001019060200180831161085457829003601f168201915b50505060ff871660009081526009602090815260408083208151808301909252805467ffffffffffffffff1682526001810180549798509396919550935090840191906108bd9061204a565b80601f01602080910402602001604051908101604052809291908181526020018280546108e99061204a565b80156109365780601f1061090b57610100808354040283529160200191610936565b820191906000526020600020905b81548152906001019060200180831161091957829003601f168201915b50505050508152505090506000600367ffffffffffffffff81111561095d5761095d611a47565b60405190808252806020026020018201604052801561099057816020015b606081526020019060019003908161097b5790505b50905082816000815181106109a7576109a76121a9565b60200260200101819052508160200151816001815181106109ca576109ca6121a9565b60200260200101819052506109ec826000015167ffffffffffffffff16611367565b816002815181106109ff576109ff6121a9565b602002602001018190525060606000306001600160a01b031663231c1619600660016040518060200160405280600081525087878d8d6040518863ffffffff1660e01b8152600401610a579796959493929190612236565b6020604051808303816000875af1158015610a76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9a919061232c565b6000908152600860205260409020805460ff191660ff999099169890981790975550505050505050565b610acc610de8565b600255565b6001546001600160a01b03163314610b2b5760405162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152606401610402565b600080543373ffffffffffffffffffffffffffffffffffffffff19808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6000819003610bb1576040516322ce3edd60e01b815260040160405180910390fd5b6006610bbe8284836120d2565b505050565b606060068054610bd29061204a565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfe9061204a565b8015610c4b5780601f10610c2057610100808354040283529160200191610c4b565b820191906000526020600020905b815481529060010190602001808311610c2e57829003601f168201915b5050505050905090565b600760205260009081526040902080546106299061204a565b610c76610de8565b610c7f81611407565b50565b6004610c8e8382612345565b506005610c9b8282612345565b507f9075ab953f4b4f161e64109ef0a89af6572e9dae864980dd1f697f83da7f78c2838383604051610ccf93929190612405565b60405180910390a1815115610bbe5760008083806020019051810190610cf5919061243a565b600087815260086020526040902054919350915060ff1680610d46576040517f1a38706200000000000000000000000000000000000000000000000000000000815260048101879052602401610402565b60408051808201825267ffffffffffffffff8581168252602080830186815260ff8616600090815260099092529390208251815467ffffffffffffffff191692169190911781559151909182916001820190610da29082612345565b509050507fad4d3b74cc74c3dd2d08418094469d058592eafc7e6f510c4f29d22fafdc3a418282604051610dd79291906124c7565b60405180910390a150505050505050565b6000546001600160a01b03163314610e425760405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152606401610402565b565b8051600003610e66576040516322ce3edd60e01b815260040160405180910390fd5b83836002811115610e7957610e79612193565b90816002811115610e8c57610e8c612193565b90525060408401828015610ea257610ea2612193565b90818015610eb257610eb2612193565b9052506060909301929092525050565b8051600003610ee45760405163fe936cb760e01b815260040160405180910390fd5b60a090910152565b8051600003610f0e5760405163fe936cb760e01b815260040160405180910390fd5b60c090910152565b60606000610f256101006114bd565b9050610f6f6040518060400160405280600c81526020017f636f64654c6f636174696f6e0000000000000000000000000000000000000000815250826114de90919063ffffffff16565b8251610f8d906002811115610f8657610f86612193565b82906114f7565b60408051808201909152600881527f6c616e67756167650000000000000000000000000000000000000000000000006020820152610fcc9082906114de565b6040830151610fe3908015610f8657610f86612193565b60408051808201909152600681527f736f75726365000000000000000000000000000000000000000000000000000060208201526110229082906114de565b60608301516110329082906114de565b60a083015151156110df5760408051808201909152600481527f6172677300000000000000000000000000000000000000000000000000000000602082015261107c9082906114de565b61108581611534565b60005b8360a00151518110156110d5576110c58460a0015182815181106110ae576110ae6121a9565b6020026020010151836114de90919063ffffffff16565b6110ce8161251f565b9050611088565b506110df81611558565b608083015151156111e05760008360200151600281111561110257611102612193565b03611139576040517fa80d31f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201909152600f81527f736563726574734c6f636174696f6e000000000000000000000000000000000060208201526111789082906114de565b61119183602001516002811115610f8657610f86612193565b60408051808201909152600781527f736563726574730000000000000000000000000000000000000000000000000060208201526111d09082906114de565b60808301516111e0908290611576565b60c0830151511561128d5760408051808201909152600981527f6279746573417267730000000000000000000000000000000000000000000000602082015261122a9082906114de565b61123381611534565b60005b8360c0015151811015611283576112738460c00151828151811061125c5761125c6121a9565b60200260200101518361157690919063ffffffff16565b61127c8161251f565b9050611236565b5061128d81611558565b515192915050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663461d27628688600188886040518663ffffffff1660e01b81526004016112ed959493929190612538565b6020604051808303816000875af115801561130c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611330919061232c565b60405190915081907f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db890600090a295945050505050565b6060600061137483611583565b600101905060008167ffffffffffffffff81111561139457611394611a47565b6040519080825280601f01601f1916602001820160405280156113be576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846113c857509392505050565b336001600160a01b0382160361145f5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610402565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6114c5611a12565b80516114d19083611665565b5060006020820152919050565b6114eb82600383516116dc565b8151610bbe90826117fd565b81516115049060c2611825565b50611530828260405160200161151c91815260200190565b604051602081830303815290604052611576565b5050565b61153f81600461188e565b6001816020018181516115529190612582565b90525050565b61156381600761188e565b6001816020018181516115529190612595565b6114eb82600283516116dc565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106115cc577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106115f8576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061161657662386f26fc10000830492506010015b6305f5e100831061162e576305f5e100830492506008015b612710831061164257612710830492506004015b60648310611654576064830492506002015b600a831061078c5760010192915050565b6040805180820190915260608152600060208201526116856020836125a8565b156116ad576116956020836125a8565b6116a0906020612595565b6116aa9083612582565b91505b6020808401839052604051808552600081529081840101818110156116d157600080fd5b604052509192915050565b60178167ffffffffffffffff16116117035782516104289060e0600585901b168317611825565b60ff8167ffffffffffffffff161161174557825161172c906018611fe0600586901b1617611825565b5082516104289067ffffffffffffffff831660016118a5565b61ffff8167ffffffffffffffff161161178857825161176f906019611fe0600586901b1617611825565b5082516104289067ffffffffffffffff831660026118a5565b63ffffffff8167ffffffffffffffff16116117cd5782516117b490601a611fe0600586901b1617611825565b5082516104289067ffffffffffffffff831660046118a5565b82516117e490601b611fe0600586901b1617611825565b5082516104289067ffffffffffffffff831660086118a5565b60408051808201909152606081526000602082015261181e8383845161192a565b9392505050565b604080518082019091526060815260006020820152825151600061184a826001612582565b90508460200151821061186b5761186b856118668360026125ca565b6119fb565b8451602083820101858153508051821115611884578181525b5093949350505050565b8151610bbe90601f611fe0600585901b1617611825565b60408051808201909152606081526000602082015283515160006118c98285612582565b905085602001518111156118e6576118e6866118668360026125ca565b600060016118f6866101006126c5565b6119009190612595565b9050865182810187831982511617815250805183111561191e578281525b50959695505050505050565b604080518082019091526060815260006020820152825182111561194d57600080fd5b835151600061195c8483612582565b9050856020015181111561197957611979866118668360026125ca565b855180518382016020019160009180851115611993578482525b505050602086015b602086106119d357805182526119b2602083612582565b91506119bf602082612582565b90506119cc602087612595565b955061199b565b51815160001960208890036101000a0190811690199190911617905250849150509392505050565b8151611a078383611665565b5061042883826117fd565b6040518060400160405280611a3a604051806040016040528060608152602001600081525090565b8152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a8657611a86611a47565b604052919050565b600067ffffffffffffffff821115611aa857611aa8611a47565b50601f01601f191660200190565b600082601f830112611ac757600080fd5b8135611ada611ad582611a8e565b611a5d565b818152846020838601011115611aef57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611b2157600080fd5b83359250602084013567ffffffffffffffff80821115611b4057600080fd5b611b4c87838801611ab6565b93506040860135915080821115611b6257600080fd5b50611b6f86828701611ab6565b9150509250925092565b803560ff81168114611b8a57600080fd5b919050565b60008083601f840112611ba157600080fd5b50813567ffffffffffffffff811115611bb957600080fd5b602083019150836020828501011115611bd157600080fd5b9250929050565b600080600060408486031215611bed57600080fd5b611bf684611b79565b9250602084013567ffffffffffffffff811115611c1257600080fd5b611c1e86828701611b8f565b9497909650939450505050565b803560038110611b8a57600080fd5b600082601f830112611c4b57600080fd5b8135602067ffffffffffffffff80831115611c6857611c68611a47565b8260051b611c77838201611a5d565b9384528581018301938381019088861115611c9157600080fd5b84880192505b85831015611ccd57823584811115611caf5760008081fd5b611cbd8a87838c0101611ab6565b8352509184019190840190611c97565b98975050505050505050565b67ffffffffffffffff81168114610c7f57600080fd5b8035611b8a81611cd9565b803563ffffffff81168114611b8a57600080fd5b600080600080600080600080600060e08a8c031215611d2c57600080fd5b893567ffffffffffffffff80821115611d4457600080fd5b611d508d838e01611b8f565b909b509950899150611d6460208d01611c2b565b985060408c0135915080821115611d7a57600080fd5b611d868d838e01611b8f565b909850965060608c0135915080821115611d9f57600080fd5b611dab8d838e01611c3a565b955060808c0135915080821115611dc157600080fd5b50611dce8c828d01611c3a565b935050611ddd60a08b01611cef565b9150611deb60c08b01611cfa565b90509295985092959850929598565b600060208284031215611e0c57600080fd5b61181e82611b79565b60005b83811015611e30578181015183820152602001611e18565b50506000910152565b60008151808452611e51816020860160208601611e15565b601f01601f19169290920160200192915050565b67ffffffffffffffff83168152604060208201526000611e886040830184611e39565b949350505050565b60208152600061181e6020830184611e39565b600080600060608486031215611eb857600080fd5b611ec184611b79565b92506020840135611ed181611cd9565b9150611edf60408501611cfa565b90509250925092565b600060208284031215611efa57600080fd5b5035919050565b60008060208385031215611f1457600080fd5b823567ffffffffffffffff811115611f2b57600080fd5b611f3785828601611b8f565b90969095509350505050565b600060408284031215611f5557600080fd5b6040516040810167ffffffffffffffff8282108183111715611f7957611f79611a47565b8160405282935084359150611f8d82611cd9565b90825260208401359080821115611fa357600080fd5b50611fb085828601611ab6565b6020830152505092915050565b60008060408385031215611fd057600080fd5b823567ffffffffffffffff80821115611fe857600080fd5b611ff486838701611f43565b9350602085013591508082111561200a57600080fd5b5061201785828601611f43565b9150509250929050565b60006020828403121561203357600080fd5b81356001600160a01b038116811461181e57600080fd5b600181811c9082168061205e57607f821691505b60208210810361207e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610bbe57600081815260208120601f850160051c810160208610156120ab5750805b601f850160051c820191505b818110156120ca578281556001016120b7565b505050505050565b67ffffffffffffffff8311156120ea576120ea611a47565b6120fe836120f8835461204a565b83612084565b6000601f841160018114612132576000851561211a5750838201355b600019600387901b1c1916600186901b17835561218c565b600083815260209020601f19861690835b828110156121635786850135825560209485019460019092019101612143565b50868210156121805760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600381106121dd57634e487b7160e01b600052602160045260246000fd5b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015612229578284038952612217848351611e39565b988501989350908401906001016121ff565b5091979650505050505050565b60e0815260008089546122488161204a565b8060e086015261010060018084166000811461226b5760018114612285576122b6565b60ff1985168884015283151560051b8801830195506122b6565b8e60005260208060002060005b868110156122ad5781548b8201870152908401908201612292565b8a018501975050505b50505050506122c8602084018a6121bf565b82810360408401526122da8189611e39565b905082810360608401526122ee81886121e1565b9050828103608084015261230281876121e1565b91505061231b60a083018567ffffffffffffffff169052565b63ffffffff831660c0830152611ccd565b60006020828403121561233e57600080fd5b5051919050565b815167ffffffffffffffff81111561235f5761235f611a47565b6123738161236d845461204a565b84612084565b602080601f8311600181146123a857600084156123905750858301515b600019600386901b1c1916600185901b1785556120ca565b600085815260208120601f198616915b828110156123d7578886015182559484019460019091019084016123b8565b50858210156123f55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b83815260606020820152600061241e6060830185611e39565b82810360408401526124308185611e39565b9695505050505050565b6000806040838503121561244d57600080fd5b825161245881611cd9565b602084015190925067ffffffffffffffff81111561247557600080fd5b8301601f8101851361248657600080fd5b8051612494611ad582611a8e565b8181528660208385010111156124a957600080fd5b6124ba826020830160208601611e15565b8093505050509250929050565b60ff831681526040602082015267ffffffffffffffff825116604082015260006020830151604060608401526125006080840182611e39565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161253157612531612509565b5060010190565b67ffffffffffffffff8616815260a06020820152600061255b60a0830187611e39565b61ffff9590951660408301525063ffffffff92909216606083015260809091015292915050565b8082018082111561078c5761078c612509565b8181038181111561078c5761078c612509565b6000826125c557634e487b7160e01b600052601260045260246000fd5b500690565b808202811582820484141761078c5761078c612509565b600181815b8085111561261c57816000190482111561260257612602612509565b8085161561260f57918102915b93841c93908002906125e6565b509250929050565b6000826126335750600161078c565b816126405750600061078c565b816001811461265657600281146126605761267c565b600191505061078c565b60ff84111561267157612671612509565b50506001821b61078c565b5060208310610133831016604e8410600b841016171561269f575081810a61078c565b6126a983836125e1565b80600019048211156126bd576126bd612509565b029392505050565b600061181e838361262456fea26469706673582212201e73a435e7952fde523d645bf445e970fbf4617defccb441bdfda3e594213f4464736f6c63430008130033";

type StatusRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StatusRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StatusRegistry__factory extends ContractFactory {
  constructor(...args: StatusRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    router: PromiseOrValue<string>,
    _donId: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StatusRegistry> {
    return super.deploy(
      router,
      _donId,
      overrides || {}
    ) as Promise<StatusRegistry>;
  }
  override getDeployTransaction(
    router: PromiseOrValue<string>,
    _donId: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router, _donId, overrides || {});
  }
  override attach(address: string): StatusRegistry {
    return super.attach(address) as StatusRegistry;
  }
  override connect(signer: Signer): StatusRegistry__factory {
    return super.connect(signer) as StatusRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StatusRegistryInterface {
    return new utils.Interface(_abi) as StatusRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StatusRegistry {
    return new Contract(address, _abi, signerOrProvider) as StatusRegistry;
  }
}
