# Use an Ubuntu base image
FROM ubuntu:latest

# Set environment variables
ENV MONGO_VERSION 8.0
ENV DEBIAN_FRONTEND noninteractive

# Update package list and install prerequisites
RUN apt-get update && \
    apt-get install -y gnupg lsb-release curl build-essential pkg-config openssl libssl-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*  # Clean up to reduce image size

RUN curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc | \
    gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg \
   --dearmor

RUN echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-8.0.list

RUN apt-get update && \
    apt-get install -y mongodb-org

RUN mkdir -p /data/db

# Install Rust and Cargo
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
    /root/.cargo/bin/rustup install stable && \
    /root/.cargo/bin/rustup default stable && \
    ln -s /root/.cargo/bin/cargo /usr/local/bin/cargo && \
    ln -s /root/.cargo/bin/rustc /usr/local/bin/rustc

# Install cargo-watch
RUN cargo install cargo-watch

# Expose MongoDB port
EXPOSE 27017

# Expose port for the web API
EXPOSE 8000

# Copy your Rust project into the container
COPY . /app
WORKDIR /app

# Start MongoDB and your Rust application
CMD ["sh", "-c", "mongod --bind_ip 0.0.0.0 & cargo watch -x run"]